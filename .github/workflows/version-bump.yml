name: Auto Version Bump and Build

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'package.json'
      - '.github/workflows/**'

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Get current version
      id: current_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Bump patch version
      id: bump_version
      run: |
        NEW_VERSION=$(npm version patch --no-git-tag-version)
        echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
        
    - name: Build theme
      run: |
        npm run zip
        
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json dist/
        git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }}" || exit 0
        
    - name: Create tag
      run: |
        git tag ${{ steps.bump_version.outputs.new_version }}
        
    - name: Push changes
      run: |
        git push origin main
        git push origin ${{ steps.bump_version.outputs.new_version }}
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.new_version }}
        release_name: Release ${{ steps.bump_version.outputs.new_version }}
        body: |
          Automatic release for version ${{ steps.bump_version.outputs.new_version }}
          
          ## Changes
          - Auto-generated from latest commits to main branch
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/solo.zip
        asset_name: solo-${{ steps.bump_version.outputs.new_version }}.zip
        asset_content_type: application/zip